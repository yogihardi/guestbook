// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "guest-book": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/yogihardi/guestbook/rest/design
// --out=$(GOPATH)/src/github.com/yogihardi/guestbook/rest
// --version=v1.3.1

package app

import (
	"github.com/goadesign/goa"
)

// GuestbookError media type (default view)
//
// Identifier: application/vnd.guestbook.error+json; view=default
type GuestbookError struct {
	// Message ID
	Code string `form:"code" json:"code" xml:"code"`
	// Localized message
	Msg string `form:"msg" json:"msg" xml:"msg"`
}

// Validate validates the GuestbookError media type instance.
func (mt *GuestbookError) Validate() (err error) {
	if mt.Code == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "code"))
	}
	if mt.Msg == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "msg"))
	}
	return
}

// GuestbookGuest media type (default view)
//
// Identifier: application/vnd.guestbook.guest+json; view=default
type GuestbookGuest struct {
	// Comment
	Comment string `form:"comment" json:"comment" xml:"comment"`
	// Guestbook ID
	ID string `form:"id" json:"id" xml:"id"`
	// Entry timestamp
	Timestamp float64 `form:"timestamp" json:"timestamp" xml:"timestamp"`
}

// Validate validates the GuestbookGuest media type instance.
func (mt *GuestbookGuest) Validate() (err error) {
	if mt.ID == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "id"))
	}

	if mt.Comment == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "comment"))
	}
	return
}

// GuestbookGuestCollection is the media type for an array of GuestbookGuest (default view)
//
// Identifier: application/vnd.guestbook.guest+json; type=collection; view=default
type GuestbookGuestCollection []*GuestbookGuest

// Validate validates the GuestbookGuestCollection media type instance.
func (mt GuestbookGuestCollection) Validate() (err error) {
	for _, e := range mt {
		if e != nil {
			if err2 := e.Validate(); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// GuestbookVersion media type (default view)
//
// Identifier: application/vnd.guestbook.version+json; view=default
type GuestbookVersion struct {
	// Git commit hash
	Git *string `form:"git,omitempty" json:"git,omitempty" xml:"git,omitempty"`
	// Application version
	Version string `form:"version" json:"version" xml:"version"`
}

// Validate validates the GuestbookVersion media type instance.
func (mt *GuestbookVersion) Validate() (err error) {
	if mt.Version == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "version"))
	}
	return
}
